version: '3.8'

services:
  quicvpn-server:
    image: quicvpn-server:latest
    container_name: quicvpn-server
    restart: unless-stopped
    ports:
      - "4433:4433/udp"
    volumes:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_NETWORK=10.0.0.0/24
      - VPN_SERVER_IP=10.0.0.1
      - SERVER_PORT=:4433
    networks:
      - quicvpn-network

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: quicvpn-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - quicvpn-network

  grafana:
    image: grafana/grafana:latest
    container_name: quicvpn-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - quicvpn-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  quicvpn-network:
    driver: bridge
